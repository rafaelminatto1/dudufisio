#!/bin/bash

# Script para aplicar migra√ß√µes usando psql diretamente
echo "üöÄ Aplicando migra√ß√µes no banco de produ√ß√£o..."

# Configurar vari√°veis de conex√£o
export PGPASSWORD="Y7H1sho7nXaoPlFN"
PGHOST="aws-1-sa-east-1.pooler.supabase.com"
PGPORT="6543"
PGUSER="postgres.jfrddsmtpahpynihubue"
PGDATABASE="postgres"

echo "üìç Conectando ao banco: $PGHOST:$PGPORT"
echo "üë§ Usu√°rio: $PGUSER"
echo "üóÑÔ∏è Banco: $PGDATABASE"

# Testar conex√£o primeiro
echo "üîç Testando conex√£o..."
PGPASSWORD="Y7H1sho7nXaoPlFN" psql -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDATABASE -c "SELECT version();" > /dev/null 2>&1

if [ $? -eq 0 ]; then
    echo "‚úÖ Conex√£o bem-sucedida!"
else
    echo "‚ùå Erro de conex√£o. Verificando credenciais..."
    exit 1
fi

# Aplicar migra√ß√µes uma por uma
migrations=(
    "supabase/migrations/20250115_001_core_entities.sql"
    "supabase/migrations/20250115_002_patients.sql"
    "supabase/migrations/20250115_003_appointments_sessions.sql"
)

for migration in "${migrations[@]}"; do
    if [ -f "$migration" ]; then
        echo "üì¶ Aplicando migra√ß√£o: $(basename $migration)"
        
        PGPASSWORD="Y7H1sho7nXaoPlFN" psql -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDATABASE -f "$migration"
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ Migra√ß√£o $(basename $migration) aplicada com sucesso!"
        else
            echo "‚ùå Erro ao aplicar migra√ß√£o $(basename $migration)"
            echo "üí° Continuando com as pr√≥ximas migra√ß√µes..."
        fi
        echo ""
    else
        echo "‚ö†Ô∏è Arquivo n√£o encontrado: $migration"
    fi
done

echo "üéâ Processo de aplica√ß√£o de migra√ß√µes conclu√≠do!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Verifique o dashboard: https://supabase.com/dashboard/project/jfrddsmtpahpynihubue"
echo "2. Configure as vari√°veis na Vercel"
echo "3. Teste a aplica√ß√£o: https://dudufisio.vercel.app"

