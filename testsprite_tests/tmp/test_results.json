[
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "aa10be4e-825a-4298-ae78-a2ade11e8ae4",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC001-Login via Email and Password - Success",
    "description": "Verify user can login successfully using valid email and password credentials.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Navigate to login page by clicking the 'Fazer Login' button\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input valid email and password into the respective fields\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('validuser@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('ValidPassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Expected result unknown, forcing failure.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login test failed: The user cannot login successfully using valid email and password credentials as the login page does not proceed to the dashboard or show any error message after submission. Stopping further testing.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162104663558//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.775Z",
    "modified": "2025-09-18T02:21:44.815Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "c71da140-1d74-4ec8-8465-79946a4ddb79",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC002-Login via Email and Password - Failure with Invalid Credentials",
    "description": "Verify login fails with invalid email or password and proper error message is shown.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Navigate to login page by clicking a login button\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input invalid email and incorrect password\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('invalid@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('wrongpassword')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Try another invalid login attempt with a different invalid email and password to see if error message appears\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('wrongemail@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('123456')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: login failure assertion not implemented due to unknown expected result'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failure with invalid email or password was tested by performing multiple invalid login attempts. However, no error message or indication of failure was displayed on the login page after these attempts. This is a defect in the system as it does not meet the requirement to show proper error messages on login failure. Task is stopped here.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                                ...\n                                  <CardContent>\n                                    <div data-slot=\"card-content\" className=\"px-6 space...\">\n                                      <GoogleSignInButton>\n                                      <div>\n                                      <form className=\"space-y-4\">\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"email\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"email\"\n                                              placeholder=\"seu@email.com\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"password\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"password\"\n                                              placeholder=\"Sua senha\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        ...\n                                      ...\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                                ...\n                                  <CardContent>\n                                    <div data-slot=\"card-content\" className=\"px-6 space...\">\n                                      <GoogleSignInButton>\n                                      <div>\n                                      <form className=\"space-y-4\">\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"email\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"email\"\n                                              placeholder=\"seu@email.com\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"password\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"password\"\n                                              placeholder=\"Sua senha\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        ...\n                                      ...\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162277331829//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.781Z",
    "modified": "2025-09-18T02:24:37.524Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "a39d7367-a990-44eb-b5a6-724694d3c629",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC003-Login via Google OAuth - Success",
    "description": "Verify user can login successfully using Google OAuth authentication method.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on the 'Fazer Login' button to navigate to the login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Click on the 'Entrar com Google' button to initiate Google OAuth login flow.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input the valid Google account email into the email field and click 'Next'.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[2]/div/div[2]/c-wiz/main/div[2]/div/div/div/form/span/section/div/div/div/div/div/div/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('valid.test.account@gmail.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[2]/div/div[2]/c-wiz/main/div[3]/div/div/div/div/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Expected result unknown, generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Google OAuth login flow could not be completed due to security restrictions from Google blocking the sign-in attempt in this browser or app environment. User cannot be authenticated successfully using Google OAuth in the current setup.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at https://accounts.youtube.com/accounts/CheckConnection?pmpo=https%3A%2F%2Faccounts.google.com&v=-592984475&timestamp=1758161897396:0:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0AC3C001C000000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at https://accounts.google.com/v3/signin/identifier?opparams=%253Fredirect_to%253Dhttp%25253A%25252F%25252Flocalhost%25253A3000%25252Fauth%25252Fcallback&dsh=S-1995750088%3A1758161893388781&access_type=offline&client_id=176380844037-pfg6j5n37oa4e8ijkhl1jqs8unii0ahl.apps.googleusercontent.com&o2v=2&prompt=consent&redirect_uri=http%3A%2F%2F127.0.0.1%3A54321%2Fauth%2Fv1%2Fcallback&response_type=code&scope=email+profile&service=lso&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTgxNjIxOTEsInNpdGVfdXJsIjoiaHR0cDovLzEyNy4wLjAuMTozMDAwIiwiaWQiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDAiLCJmdW5jdGlvbl9ob29rcyI6bnVsbCwicHJvdmlkZXIiOiJnb29nbGUiLCJyZWZlcnJlciI6Imh0dHA6Ly8xMjcuMC4wLjE6MzAwMCIsImZsb3dfc3RhdGVfaWQiOiI5ZDJlODc2ZS0wNGRkLTQ1ZGItYTE3OC0wMGI0ZmUwZjZlNTIifQ.VUZ4di8QLphxRqQSZfZHtclT13u5m5kgXtI1rPX0G1Y&flowName=GeneralOAuthFlow&continue=https%3A%2F%2Faccounts.google.com%2Fsignin%2Foauth%2Fconsent%3Fauthuser%3Dunknown%26part%3DAJi8hAMXnbxaEHBbZyphLtdHNmbYOl_31VM1qnAn6z7HUcpVKcWpTD2_l0sw8QsGZOoP4ccHZpIE9YG1nVhwA3zou8H7Y9lH1ZJSXOBj-AC1dJ_5QMy6t053LDwN-LVM_sVDFAIBOiqCCk2FqkXVyk7bFFSUGMa5D_Z3LioOOt4Sjlpd8Xh6Qs6oWl_x4ltllDhd5uJiLsAufLXT7uAQiIBl4zCjWaE7nrzd_F3wFghEOkYvFgsvpAfmw3_fv7xZMqJ4FEhYGc48QPnAhzD0MQnn5pAmnwnxoBskzieV8jmRlEamKegE9wRNDoCn4jYolahnMsHFB95yZV8waOr8Zyhbq7YSTEAtnUHqYiT2PT4QADMqekcTyq9ZPYrItI5oCZJUh9xbX1jXO-dPvXNKcjNfoKalcHPrrqmaQaV2nAY5LX1Vx5FzboUjhzIIgfxrhZ0M1whmD4sAsPhj4BTqZQQE7F_QeqVr4g%26flowName%3DGeneralOAuthFlow%26as%3DS-1995750088%253A1758161893388781%26client_id%3D176380844037-pfg6j5n37oa4e8ijkhl1jqs8unii0ahl.apps.googleusercontent.com%23&app_domain=http%3A%2F%2F127.0.0.1%3A54321&rart=ANgoxcekYFEiAupFxDuMNlfw69NfpA9Pr-hjOciCNMIjm_Ni4GJV0dyr_yYqwrpYW4QstRM2GaM4wzjwoYr2US64E-SdG5vFcGcE9INxqSGNQBzE-PFK0j8:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162065190255//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.787Z",
    "modified": "2025-09-18T02:21:05.371Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "060cc3f6-37d9-4ed5-987e-32f69e3dedbd",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC004-Login via Magic Link - Success",
    "description": "Verify user can login using Magic Link sent to registered email.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Navigate to login page by clicking a login button\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Submit registered email to request Magic Link\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('registered_user@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Check 'Esqueceu a senha?' (Forgot Password) link for Magic Link or alternative login options\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[3]/a').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Unable to verify user login via Magic Link due to unknown expected result.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to broken 'Esqueceu a senha?' link leading to 404 and no visible Magic Link login option on the login page. Unable to verify Magic Link login functionality.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:3000/auth/forgot-password?_rsc=vhvvv:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:3000/auth/forgot-password:0:0)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /_not-found. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162186926669//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.792Z",
    "modified": "2025-09-18T02:23:07.091Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "97ed669e-2eac-4866-bdc9-eaee7611c797",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC005-Role Based Access Control (RBAC) Enforcement - Admin Access",
    "description": "Verify Admin users can access all administrative features including user invitations and reports.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on the login button to start Admin user login.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Admin email and password, then click Entrar to login.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('admin@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('AdminPassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Try to login using the 'Entrar com Google' button as an alternative method or report the issue if it fails.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Admin user's Google email and click Next to proceed with Google authentication.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[2]/div/div[2]/c-wiz/main/div[2]/div/div/div/form/span/section/div/div/div/div/div/div/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('admin@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[2]/div/div[2]/c-wiz/main/div[3]/div/div/div/div/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test failed: Admin user could not access all administrative features as expected.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Admin login failed via both direct credentials and Google OAuth due to security restrictions and login errors. Unable to proceed with verification of admin features. Task stopped due to login issues.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at https://accounts.youtube.com/accounts/CheckConnection?pmpo=https%3A%2F%2Faccounts.google.com&v=850780714&timestamp=1758161962136:0:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0C0B9072C000000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at https://accounts.google.com/v3/signin/identifier?opparams=%253Fredirect_to%253Dhttp%25253A%25252F%25252Flocalhost%25253A3000%25252Fauth%25252Fcallback&dsh=S-670535821%3A1758161958284660&access_type=offline&client_id=176380844037-pfg6j5n37oa4e8ijkhl1jqs8unii0ahl.apps.googleusercontent.com&o2v=2&prompt=consent&redirect_uri=http%3A%2F%2F127.0.0.1%3A54321%2Fauth%2Fv1%2Fcallback&response_type=code&scope=email+profile&service=lso&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTgxNjIyNTYsInNpdGVfdXJsIjoiaHR0cDovLzEyNy4wLjAuMTozMDAwIiwiaWQiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDAiLCJmdW5jdGlvbl9ob29rcyI6bnVsbCwicHJvdmlkZXIiOiJnb29nbGUiLCJyZWZlcnJlciI6Imh0dHA6Ly8xMjcuMC4wLjE6MzAwMCIsImZsb3dfc3RhdGVfaWQiOiIyYjNjZDFmOC03NmJhLTQ2ZWYtYTMzNi1iNjdhN2Q5YmI2Y2UifQ.9OwSYEKhQMD7yapYxo50N7yIUqCi4Rq44ObraIcmk1I&flowName=GeneralOAuthFlow&continue=https%3A%2F%2Faccounts.google.com%2Fsignin%2Foauth%2Fconsent%3Fauthuser%3Dunknown%26part%3DAJi8hAO76F6KztPEuM78jMEZLxp1oxaKdnmSA4b7UDt9uEbwxXjibcTG2kgsWvc-sPWcdvjAGGR6OUjpklDGUOtl84mrzLojxGnkTaJHSQF9CjApXBRbRZKI44f9OBfYLnArAs_PDDxegWPgF6cvlmh87XQ-mIO0vV-_rowIdj3De-JNq2H2BaQ-5jPlDAuQ1nGjRdcMAgWNQrQi6t6hJTcIaxeKLfxh3zrGkVvtAU1bg7rUSbhA8JXufMDEZt-t3OvF7KSlHuZyXEd1Cm3aNULDpXCqnR2GpYwgTGHphA-vq2ZfiyiGfe6YV9xd15Bo7sbMw3tuXg_z0LSvwICQNl8P8paY9ZTXitMHBxyS0LJ2UIaQcAmRjyCqj1IqtYbbrryhYMeLtMgPH4HGpYf1w9t8A9OkPV1pc09oQ7LGy4RFMccbFygWwQmFzbsv4N_Q39SFm-xehMu4Ut2Gft4gkw9WAbNhc1UHZQ%26flowName%3DGeneralOAuthFlow%26as%3DS-670535821%253A1758161958284660%26client_id%3D176380844037-pfg6j5n37oa4e8ijkhl1jqs8unii0ahl.apps.googleusercontent.com%23&app_domain=http%3A%2F%2F127.0.0.1%3A54321&rart=ANgoxccuuXNIkQIKS2tfMe2DdjVHDEBjqKWL9vNeKzZJYdKl0DU3EPVfN-QIFziAUzLsr8R-KeuBrgZX5N-QXXaS1g1-lFxNMFJ4hkmBFgW-KYDTDpjpDKA:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162135069411//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.798Z",
    "modified": "2025-09-18T02:22:15.236Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "4d8fb023-431a-4bc5-ad97-762d622b1b11",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC006-Role Based Access Control (RBAC) Enforcement - Fisioterapeuta Access",
    "description": "Verify Fisioterapeuta users have access to patient list, edit medical records, body mapping, and session documentation.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input email and password for Fisioterapeuta user and click Entrar button.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('fisioterapeuta@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('password123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Try to login using 'Entrar com Google' button as an alternative method or report the login issue if that fails.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input the Fisioterapeuta user's Google email and proceed with the login flow.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[2]/div/div[2]/c-wiz/main/div[2]/div/div/div/form/span/section/div/div/div/div/div/div/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('fisioterapeuta@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[2]/div/div[2]/c-wiz/main/div[3]/div/div/div/div/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to inability to authenticate Fisioterapeuta user. Both direct and Google OAuth login methods failed. Cannot verify access permissions without successful login. Issue reported for resolution.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at https://accounts.youtube.com/accounts/CheckConnection?pmpo=https%3A%2F%2Faccounts.google.com&v=-631979049&timestamp=1758161964408:0:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A0443C0034000000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at https://accounts.google.com/v3/signin/identifier?opparams=%253Fredirect_to%253Dhttp%25253A%25252F%25252Flocalhost%25253A3000%25252Fauth%25252Fcallback&dsh=S318899209%3A1758161960702597&access_type=offline&client_id=176380844037-pfg6j5n37oa4e8ijkhl1jqs8unii0ahl.apps.googleusercontent.com&o2v=2&prompt=consent&redirect_uri=http%3A%2F%2F127.0.0.1%3A54321%2Fauth%2Fv1%2Fcallback&response_type=code&scope=email+profile&service=lso&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTgxNjIyNTksInNpdGVfdXJsIjoiaHR0cDovLzEyNy4wLjAuMTozMDAwIiwiaWQiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDAiLCJmdW5jdGlvbl9ob29rcyI6bnVsbCwicHJvdmlkZXIiOiJnb29nbGUiLCJyZWZlcnJlciI6Imh0dHA6Ly8xMjcuMC4wLjE6MzAwMCIsImZsb3dfc3RhdGVfaWQiOiJiYmE4NDM1Ni05OTZhLTRkNzMtOTMwYS1iMGIyMzQ3ZjAwNGUifQ.1GabTpAYGlYhFQU5l0XUraM8J9qN_W8K-JCYfV1L6Rg&flowName=GeneralOAuthFlow&continue=https%3A%2F%2Faccounts.google.com%2Fsignin%2Foauth%2Fconsent%3Fauthuser%3Dunknown%26part%3DAJi8hAPvx43-yugEbi0fDF8xHEdGBLgW3USAbpCZPxtDwoyOv1p71a7ZXdfHYC-GQSlKXqcTHlwvwrIRY3OR9-rpQZyVIBfrWt1uhhPpt_UinhzfskqmxYKdKIMB4TIEuSlRpqP37PWVYsVVjp0TEfSRsXYIui5sV6pGkx8C7H_4EkFMZratEBUUpeKVnvk_O0oZQowPQYS6eNe8D-LTmWVbcDnv_5TKkNfyUauDW8BhmjRTzQTnYnbavtfYHZfDlCP4HlYFRu-yxJLyxqogImpmxvq58jYS3MQo-VALVh00-O2J16N-HGbf7ZHTMcWEykmtPGjBaxHlWphQZZYA4t2TNJepM6MpJMDa1tzxUOsa5pt0jMlfxnN1v2Z-iURXB41hbS8AqgdhAOC_54hgN007qgpLdMJe4lrfDjnrch79X758m34CbJ1n8zttzIAKJWh8KbVFidpPh9PEg-CqP3y4OWGbMF9PzQ%26flowName%3DGeneralOAuthFlow%26as%3DS318899209%253A1758161960702597%26client_id%3D176380844037-pfg6j5n37oa4e8ijkhl1jqs8unii0ahl.apps.googleusercontent.com%23&app_domain=http%3A%2F%2F127.0.0.1%3A54321&rart=ANgoxcff-yW74koqVYHDG9eK1wOjncwrMf1MnbMSC-91uiMpdBCZteCPykDOM-0ja6IRYsnel41mYE8xpPYHyvdF6QYtwUBJjLaxZ_aLR2KD7gMUtUbHTiE:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162170506479//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.805Z",
    "modified": "2025-09-18T02:22:50.636Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "76da7cf0-cc8f-40d3-90ee-dd4ca198c058",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC007-Role Based Access Control (RBAC) Enforcement - Estagiario Access",
    "description": "Verify Estagiario users have restricted access to documentation and follow-up features under supervision.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Estagiario user email and password, then click Entrar button\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('estagiario@fisioflow.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('password123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Try to login using 'Entrar com Google' button as alternative method or check for any error messages or alerts on the page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Estagiario user's Google email into the email input field and click 'Next' to proceed with Google authentication.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[2]/div/div[2]/c-wiz/main/div[2]/div/div/div/form/span/section/div/div/div/div/div/div/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('estagiario@fisioflow.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[2]/div/div[2]/c-wiz/main/div[3]/div/div/div/div/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion as expected result is unknown.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to inability to login as Estagiario user. Both direct login and Google OAuth login attempts failed. Google OAuth blocked by security error message. Unable to verify access restrictions for Estagiario user.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at https://accounts.youtube.com/accounts/CheckConnection?pmpo=https%3A%2F%2Faccounts.google.com&v=969139597&timestamp=1758161965477:0:0)\n[WARNING] [GroupMarkerNotSet(crbug.com/242999)!:A040D60014000000]Automatic fallback to software WebGL has been deprecated. Please use the --enable-unsafe-swiftshader flag to opt in to lower security guarantees for trusted content. (at https://accounts.google.com/v3/signin/identifier?opparams=%253Fredirect_to%253Dhttp%25253A%25252F%25252Flocalhost%25253A3000%25252Fauth%25252Fcallback&dsh=S-837317816%3A1758161961537689&access_type=offline&client_id=176380844037-pfg6j5n37oa4e8ijkhl1jqs8unii0ahl.apps.googleusercontent.com&o2v=2&prompt=consent&redirect_uri=http%3A%2F%2F127.0.0.1%3A54321%2Fauth%2Fv1%2Fcallback&response_type=code&scope=email+profile&service=lso&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTgxNjIyNTksInNpdGVfdXJsIjoiaHR0cDovLzEyNy4wLjAuMTozMDAwIiwiaWQiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDAiLCJmdW5jdGlvbl9ob29rcyI6bnVsbCwicHJvdmlkZXIiOiJnb29nbGUiLCJyZWZlcnJlciI6Imh0dHA6Ly8xMjcuMC4wLjE6MzAwMCIsImZsb3dfc3RhdGVfaWQiOiI2ZjZhYjdjNS0yMWQxLTQzZGQtYWE5NS1jNmYxMDRkOGQzY2YifQ.wWIFOymuwYmG7R2zxE9zCdd7N7mpxugoEjgHpC5BssY&flowName=GeneralOAuthFlow&continue=https%3A%2F%2Faccounts.google.com%2Fsignin%2Foauth%2Fconsent%3Fauthuser%3Dunknown%26part%3DAJi8hAODuyUtWdIofA-_Pc_FFN7J6MRVuTvydVF2-UopSfldtP3NQZ468QN_sOw7VASOTXe7Y8FG6_ezxqevaUbMdItzlxReUzYTzC_Cdf3d-YRr98qsepATkyEYxDDhCFhEyqLsbCUplwwqnqYQCuFjs7MKXvTxP8FlpXOm0gSfeLmugTM5NR5l5Fd5pGAeG_EpapOkGyr7br1-BD6oPiwofSnW3iAi6FwtnFwtrPyjbu4RNvp6npo_FHbx8OoUWJSkWLBAy2Smolq8STBpaSQ4pB7hAInJnL_w1JNxiFgtW3Vn3SRV2VlrwS5rWq4x7Q4vLd4k2f2qf4YpRpq_PjFWT_rOVCtVqhyeMdLRgm4srKBNUdwJsHFiTgzahvvP5bJ3gYJ5Gq_7DzmXr9WGDExmTBWcXU-rAAZrZAQQIcK2nnVxw-xFPRyxvDKnI4ytgCJDjSzqBTjsuBldwoFUl8LJ7L8fWOv5qA%26flowName%3DGeneralOAuthFlow%26as%3DS-837317816%253A1758161961537689%26client_id%3D176380844037-pfg6j5n37oa4e8ijkhl1jqs8unii0ahl.apps.googleusercontent.com%23&app_domain=http%3A%2F%2F127.0.0.1%3A54321&rart=ANgoxcfQiN-quKCd6fP7SFAGBF8o0JZC-YuBhA1XbF9UjXHbLS4OdI40VWwfmq8XlkmeBN6oLdgZVmwpARf6P-ZYDA_6P9FyRCSMk-hcztU7x6zhW5qjpxQ:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162167031151//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.812Z",
    "modified": "2025-09-18T02:22:47.187Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "d8b4eb68-cdbe-4e7c-9a40-6ff38dcf302b",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC008-Role Based Access Control (RBAC) Enforcement - Paciente Portal Access",
    "description": "Verify Paciente users can view treatment plans, prescribed exercises and provide feedback via portal.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Paciente user email and password, then click Entrar button to login.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('paciente@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('PacientePass123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Paciente user login failed repeatedly, preventing access to patient portal. Cannot verify treatment plans, prescribed exercises, or feedback submission. Reporting issue and stopping test.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162122996932//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.819Z",
    "modified": "2025-09-18T02:22:03.195Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "fea11bfe-221b-4210-8782-d4d8288502a9",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC009-Patient CRUD Operations with CPF Validation and Secure Photo Upload",
    "description": "Verify creation, reading, updating, and logical deletion of patient records with CPF validation and secure photo upload.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input valid email and password for authorized user and click 'Entrar' button.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('admin@fisioweb.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('AdminPass123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login functionality is broken or not working as expected. Unable to proceed with patient record creation, reading, updating, or deletion tests. Please fix the login issue to continue testing.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/17581621084873//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.825Z",
    "modified": "2025-09-18T02:21:48.622Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "e4a50af0-1e54-46ec-9726-9b6497a9dc46",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC010-Interactive Body Mapping - Pain Point Registration and Timeline Visualization",
    "description": "Verify interactive SVG body map allows recording pain points with scale 0-10 and displays evolution timeline correctly.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input email and password for Fisioterapeuta and click Entrar button.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('fisioterapeuta@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('securepassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failure prevents further testing of body map pain point recording and timeline verification. Issue reported. Task stopped.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162106470059//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.831Z",
    "modified": "2025-09-18T02:21:46.638Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "0efaa46f-1c88-47c9-9703-4746d252d117",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC011-Appointment Scheduling with Conflict Prevention and Notifications",
    "description": "Verify appointment scheduling integrates calendar, prevents time conflicts, supports waiting list, and sends automatic notifications.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on the 'Fazer Login' button to proceed to login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input email and password for authorized user (Fisioterapeuta or Admin) and click 'Entrar' button.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('fisioterapeuta@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('securePassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failed with valid credentials, preventing access to appointment scheduling features. Reporting the issue and stopping further testing as login is a prerequisite for the task.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162118301549//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.838Z",
    "modified": "2025-09-18T02:21:58.437Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "25112e4e-e4e5-4e99-a812-c5250bbc60c9",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC012-Session Documentation including Pain Levels, Procedures and Exercise Prescription",
    "description": "Verify recording session notes with pain levels, procedures performed and prescribing exercises with follow-up scheduling option.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login screen.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input email and password for Fisioterapeuta and click Entrar button.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('fisioterapeuta@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('securepassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failure prevents proceeding with the task of verifying recording session notes and related functionalities. Reported the issue and stopped further actions.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                                ...\n                                  <CardContent>\n                                    <div data-slot=\"card-content\" className=\"px-6 space...\">\n                                      <GoogleSignInButton>\n                                      <div>\n                                      <form className=\"space-y-4\">\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"email\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"email\"\n                                              placeholder=\"seu@email.com\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"password\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"password\"\n                                              placeholder=\"Sua senha\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        ...\n                                      ...\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162085552402//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.845Z",
    "modified": "2025-09-18T02:21:25.719Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "c449700a-1927-4288-9de8-ea1236eec518",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC013-Exercise Library Access, Search and Creation",
    "description": "Verify exercise library is accessible, supports search and filtering by body region and type, and allows creation of new exercises with video and difficulty level.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to start login as Fisioterapeuta.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input email and password for Fisioterapeuta and click Entrar.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('fisioterapeuta@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('securepassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failure prevents access to the exercise library and further testing steps. Reported the issue and stopped the task as per instructions.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162086157105//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.854Z",
    "modified": "2025-09-18T02:21:26.325Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "7a33602b-2a49-4a2d-bb0b-6259d9f795ac",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC014-Personalized Exercise Prescription and Patient Portal Tracking",
    "description": "Verify personalized exercise prescription is delivered to patient portal and patient adherence can be reported and tracked.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page for Fisioterapeuta.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Fisioterapeuta email and password, then click 'Entrar' to login.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('fisioterapeuta@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('securepassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failure prevents proceeding with the task of verifying personalized exercise prescription and patient adherence tracking. Issue reported for resolution.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162105242194//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.900Z",
    "modified": "2025-09-18T02:21:45.516Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "217c4339-e620-40b1-b185-238ba637821c",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC015-Dashboards Display Correct Data per User Role",
    "description": "Verify each user role dashboard loads with correct personalized KPIs and metrics relevant to the role.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page for Admin user.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Admin email and password, then click 'Entrar' to login.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('admin@fisioflow.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('AdminPassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login with Admin credentials failed silently, preventing access to the dashboard. Unable to verify role-based dashboards for Admin, Fisioterapeuta, Estagiario, and Paciente. Please check authentication system. Task stopped.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                                ...\n                                  <CardContent>\n                                    <div data-slot=\"card-content\" className=\"px-6 space...\">\n                                      <GoogleSignInButton>\n                                      <div>\n                                      <form className=\"space-y-4\">\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"email\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"email\"\n                                              placeholder=\"seu@email.com\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"password\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"password\"\n                                              placeholder=\"Sua senha\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        ...\n                                      ...\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162086215727//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.910Z",
    "modified": "2025-09-18T02:21:26.375Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "766dcdb5-02f1-49d6-b68d-e6e06be452ed",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC016-Clinical and Financial Reports Generation and PDF Export",
    "description": "Verify reports are generated with accurate data and can be exported in PDF and professional formats.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on the 'Fazer Login' button to proceed to login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Admin email and password, then click 'Entrar' to login.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('admin@fisioflow.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('AdminPassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failure prevents further testing of report generation and export functionality. Issue reported and testing stopped.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162104294028//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.918Z",
    "modified": "2025-09-18T02:21:44.513Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "361e94b0-9d15-4a9e-b540-ceb894b1b6a4",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC017-Data Security and LGPD Compliance - Encryption and Audit Trails",
    "description": "Verify sensitive data is encrypted at rest and audit trails record all data changes for compliance with LGPD.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input email and password, then click 'Entrar' to login.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('admin@fisioflow.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('AdminPass123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion as expected result is unknown.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failure prevents access to the system. Cannot verify encryption at rest or audit trails. Testing stopped due to inability to authenticate.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162090319119//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.925Z",
    "modified": "2025-09-18T02:21:30.467Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "abfbf6b7-e49b-4383-b616-08e484815daf",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC018-UI Components Accessibility and Brazilian Localization",
    "description": "Verify UI components use Radix UI and Tailwind CSS, are accessible and properly localized for Brazilian Portuguese including forms and labels.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Navigate to the login form to verify Radix UI and Tailwind CSS usage, accessibility, and localization.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section[3]/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Check accessibility of login form components (keyboard navigation and screen reader labels) and verify Radix UI and Tailwind CSS usage.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Click on 'Cadastre-se' link to navigate to the registration form and verify Radix UI, Tailwind CSS usage, accessibility, and localization.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/div[2]/a').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to 404 error on registration page. Login form was partially verified for localization and accessibility but no explicit Radix UI or Tailwind CSS usage was found. Registration page is missing, blocking further tests.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:3000/auth/register?_rsc=vhvvv:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:3000/auth/register:0:0)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /_not-found. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162173943415//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.932Z",
    "modified": "2025-09-18T02:22:54.126Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "84ee1134-fbfa-4640-8e22-5152b74284ae",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC019-Error Handling and Validation Feedback",
    "description": "Verify centralized error handling returns clear, user-friendly messages and validations prevent incorrect data submissions on all forms.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to access the login form for testing authentication form validations.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Submit login form with missing email and password to verify validation errors.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input invalid email format and valid password, then submit login form to check validation error for email.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('invalid-email-format')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('ValidPassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input valid email and incorrect password, then submit the login form to verify error handling for authentication failure.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('user@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('WrongPassword123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Click on 'Cadastre-se' link to navigate to patient registration form for further validation testing.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/div[2]/a').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing stopped due to missing patient registration form page (404 error). Login form validations and error handling were successfully tested. Further form tests could not proceed. Please resolve the issue to continue comprehensive testing.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:3000/auth/register?_rsc=970e3:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 404 (Not Found) (at http://localhost:3000/auth/register:0:0)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /_not-found. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162257667677//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:51.944Z",
    "modified": "2025-09-18T02:24:17.841Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "376a66a4-91e1-4487-b0cf-4f93d2396549",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC020-End-to-End Workflow: Patient Registration, Body Mapping, Appointment and Session Documentation",
    "description": "Verify an end-to-end workflow from patient registration, assigning therapist, recording pain points, scheduling appointment, to documenting session with exercise prescription.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page for Admin authentication.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input Admin email and password, then click 'Entrar' to login as Admin.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('admin@example.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('AdminPass123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Admin login failure prevents continuation of the end-to-end workflow test. Reported the issue and stopped further actions.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                                ...\n                                  <CardContent>\n                                    <div data-slot=\"card-content\" className=\"px-6 space...\">\n                                      <GoogleSignInButton>\n                                      <div>\n                                      <form className=\"space-y-4\">\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"email\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"email\"\n                                              placeholder=\"seu@email.com\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        <div className=\"space-y-2\">\n                                          <Label>\n                                          <Input>\n                                            <input\n                                              type=\"password\"\n                                              data-slot=\"input\"\n                                              className=\"file:text-foreground placeholder:text-muted-foreground select...\"\n                                              id=\"password\"\n                                              placeholder=\"Sua senha\"\n                                              required={true}\n-                                             style={{caret-color:\"transparent\"}}\n                                            >\n                                        ...\n                                      ...\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162085388768//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:52.001Z",
    "modified": "2025-09-18T02:21:25.520Z"
  },
  {
    "projectId": "c1f69d9f-8cbb-4aeb-983f-2193695c0558",
    "testId": "54e7c46e-4ecb-40f8-9867-a1289b30cc73",
    "userId": "e4283488-7051-707c-11ef-c2c52f8a0848",
    "title": "TC021-API Contract Tests for Patient and Appointment Endpoints",
    "description": "Verify all REST API endpoints for patients and appointments adhere to contract specifications and handle errors gracefully.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3000\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Fazer Login' button to proceed to login page.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/section/div/div/div/a[2]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Input valid email and password, then click 'Entrar' to login.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('admin@fisioflow.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('AdminPass123')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/div/div[2]/div[2]/form/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Login failure prevents access to the system and further API endpoint testing. Reported the issue and stopped testing.\nBrowser Console Logs:\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s <html> body  \n\n  ...\n    <HotReload assetPrefix=\"\" globalError={[...]}>\n      <AppDevOverlayErrorBoundary globalError={[...]}>\n        <ReplaySsrOnlyErrors>\n        <DevRootHTTPAccessFallbackBoundary>\n          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>\n            <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<NotAllowedRootHTTPFallbackError>} ...>\n              <RedirectBoundary>\n                <RedirectErrorBoundary router={{...}}>\n                  <Head>\n                  <__next_root_layout_boundary__>\n                    <SegmentViewNode type=\"layout\" pagePath=\"layout.tsx\">\n                      <SegmentTrieNode>\n                      <link>\n                      <RootLayout>\n                        <html lang=\"pt-BR\">\n                          <head>\n>                         <body className=\"__variable_188709 __variable_9a8899 antialiased\">\n                            <PWAManager>\n                            <OnlineStatus>\n                            ...\n                              <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                                <SegmentTrieNode>\n                                <RootLayout>\n>                                 <html lang=\"en\">\n                  ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] <%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. body <html> (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. html html html (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[ERROR] You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first. body body body (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)\n[WARNING] %c%s%c  ⚠ Unsupported metadata themeColor is configured in metadata export in /login. Please move it to viewport export instead.\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px  Server   (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js:3422:21)\n[ERROR] A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s https://react.dev/link/hydration-mismatch \n\n  ...\n    <RenderFromTemplateContext>\n      <ScrollAndFocusHandler segmentPath={[...]}>\n        <InnerScrollAndFocusHandler segmentPath={[...]} focusAndScrollRef={{apply:false, ...}}>\n          <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n            <LoadingBoundary loading={null}>\n              <HTTPAccessFallbackBoundary notFound={<SegmentViewNode>} forbidden={undefined} unauthorized={undefined}>\n                <HTTPAccessFallbackErrorBoundary pathname=\"/login\" notFound={<SegmentViewNode>} forbidden={undefined} ...>\n                  <RedirectBoundary>\n                    <RedirectErrorBoundary router={{...}}>\n                      <InnerLayoutRouter url=\"/login\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                        <SegmentViewNode type=\"layout\" pagePath=\"(auth)/lay...\">\n                          <SegmentTrieNode>\n                          <RootLayout>\n                            <html\n+                             lang=\"en\"\n-                             lang=\"pt-BR\"\n                            >\n                              <body\n-                               className=\"__variable_188709 __variable_9a8899 antialiased\"\n                              >\n                      ...\n          ...\n    ...\n (at webpack-internal:///(app-pages-browser)/./node_modules/next/dist/next-devtools/userspace/app/errors/intercept-console-error.js:56:31)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/e4283488-7051-707c-11ef-c2c52f8a0848/1758162108240727//tmp/test_task/result.webm",
    "created": "2025-09-18T02:16:52.010Z",
    "modified": "2025-09-18T02:21:48.418Z"
  }
]
