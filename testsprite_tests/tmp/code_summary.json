{
  "tech_stack": [
    "TypeScript",
    "Next.js",
    "React",
    "PostgreSQL",
    "Supabase",
    "Tailwind CSS",
    "shadcn/ui",
    "Vercel"
  ],
  "features": [
    {
      "name": "Authentication System",
      "description": "Sistema de autenticação completo com múltiplos métodos de login (email/senha, Google OAuth, Magic Link) e controle de acesso baseado em papéis (Admin, Fisioterapeuta, Estagiário, Paciente)",
      "files": [
        "src/app/auth/callback/route.ts",
        "src/lib/auth/session-manager.ts",
        "src/lib/rbac.ts",
        "app/(auth)/login/page.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Authentication API",
          "version": "1.0.0"
        },
        "paths": {
          "/auth/login": {
            "post": {
              "summary": "User login",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/auth/google": {
            "post": {
              "summary": "Google OAuth login"
            }
          },
          "/auth/magic-link": {
            "post": {
              "summary": "Magic link authentication"
            }
          }
        }
      }
    },
    {
      "name": "Patient Management",
      "description": "Sistema completo de gestão de pacientes com CRUD, validação de CPF, upload de fotos, busca avançada e histórico médico eletrônico",
      "files": [
        "app/patients/page.tsx",
        "app/patients/[id]/page.tsx",
        "src/hooks/usePatients.ts",
        "src/components/patient-form.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Patient Management API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/patients": {
            "get": {
              "summary": "List patients",
              "parameters": [
                {"name": "search", "in": "query", "schema": {"type": "string"}},
                {"name": "page", "in": "query", "schema": {"type": "integer"}}
              ]
            },
            "post": {
              "summary": "Create patient",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "name": {"type": "string"},
                        "cpf": {"type": "string"},
                        "birthDate": {"type": "string"},
                        "phone": {"type": "string"},
                        "email": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/patients/{id}": {
            "get": {
              "summary": "Get patient by ID"
            },
            "put": {
              "summary": "Update patient"
            },
            "delete": {
              "summary": "Delete patient"
            }
          }
        }
      }
    },
    {
      "name": "Body Mapping System",
      "description": "Sistema interativo de mapeamento corporal com SVG, registro de pontos de dor (escala 0-10), anotações, fotos e timeline de evolução",
      "files": [
        "app/bodymap/page.tsx",
        "components/bodymap/BodyMapSVG.tsx",
        "components/bodymap/PainPointModal.tsx",
        "components/bodymap/PainTimeline.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Body Mapping API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/body-map/pain-points": {
            "post": {
              "summary": "Create pain point",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "patientId": {"type": "string"},
                        "bodyPart": {"type": "string"},
                        "intensity": {"type": "integer", "minimum": 0, "maximum": 10},
                        "notes": {"type": "string"},
                        "coordinates": {"type": "object"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/body-map/pain-points/{patientId}": {
            "get": {
              "summary": "Get pain points for patient"
            }
          }
        }
      }
    },
    {
      "name": "Appointment Scheduling",
      "description": "Sistema de agendamento de consultas com calendário interativo, prevenção de conflitos, lista de espera e notificações automáticas",
      "files": [
        "app/appointments/page.tsx",
        "app/appointments/new/page.tsx",
        "app/appointments/[id]/page.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Appointment Scheduling API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/appointments": {
            "get": {
              "summary": "List appointments",
              "parameters": [
                {"name": "date", "in": "query", "schema": {"type": "string"}},
                {"name": "therapistId", "in": "query", "schema": {"type": "string"}}
              ]
            },
            "post": {
              "summary": "Create appointment",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "patientId": {"type": "string"},
                        "therapistId": {"type": "string"},
                        "dateTime": {"type": "string"},
                        "duration": {"type": "integer"},
                        "notes": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/appointments/{id}": {
            "put": {
              "summary": "Update appointment"
            },
            "delete": {
              "summary": "Cancel appointment"
            }
          }
        }
      }
    },
    {
      "name": "Exercise Library",
      "description": "Biblioteca de exercícios categorizada por região corporal e tipo, com vídeos demonstrativos, níveis de dificuldade e prescrição personalizada",
      "files": [
        "src/components/exercise-library.tsx",
        "src/components/exercise-prescription.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Exercise Library API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/exercises": {
            "get": {
              "summary": "List exercises",
              "parameters": [
                {"name": "category", "in": "query", "schema": {"type": "string"}},
                {"name": "difficulty", "in": "query", "schema": {"type": "integer"}},
                {"name": "bodyPart", "in": "query", "schema": {"type": "string"}}
              ]
            }
          },
          "/api/exercises/{id}": {
            "get": {
              "summary": "Get exercise details"
            }
          },
          "/api/prescriptions": {
            "post": {
              "summary": "Create exercise prescription",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "patientId": {"type": "string"},
                        "exercises": {"type": "array", "items": {"type": "object"}},
                        "instructions": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Dashboard Analytics",
      "description": "Dashboard analítico com métricas de performance, KPIs operacionais, relatórios clínicos e financeiros personalizáveis",
      "files": [
        "app/dashboard/page.tsx",
        "app/dashboard/fisioterapeuta/page.tsx",
        "src/components/dashboard-metrics.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Dashboard Analytics API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/dashboard/metrics": {
            "get": {
              "summary": "Get dashboard metrics",
              "parameters": [
                {"name": "period", "in": "query", "schema": {"type": "string"}},
                {"name": "role", "in": "query", "schema": {"type": "string"}}
              ]
            }
          },
          "/api/reports": {
            "get": {
              "summary": "Generate reports",
              "parameters": [
                {"name": "type", "in": "query", "schema": {"type": "string"}},
                {"name": "startDate", "in": "query", "schema": {"type": "string"}},
                {"name": "endDate", "in": "query", "schema": {"type": "string"}}
              ]
            }
          }
        }
      }
    },
    {
      "name": "Session Documentation",
      "description": "Sistema de documentação de sessões fisioterapêuticas com registro de procedimentos, níveis de dor, exercícios prescritos e agendamento de retorno",
      "files": [
        "src/components/session-documentation.tsx",
        "src/components/session-form.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Session Documentation API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/sessions": {
            "post": {
              "summary": "Create session documentation",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "appointmentId": {"type": "string"},
                        "procedures": {"type": "array", "items": {"type": "string"}},
                        "painLevelBefore": {"type": "integer"},
                        "painLevelAfter": {"type": "integer"},
                        "notes": {"type": "string"},
                        "exercisesPrescribed": {"type": "array", "items": {"type": "object"}}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "LGPD Compliance",
      "description": "Sistema de conformidade com LGPD incluindo gestão de consentimento, portabilidade de dados, direito ao esquecimento e trilhas de auditoria",
      "files": [
        "src/lib/lgpd.ts",
        "src/lib/db/rls-enforcer.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "LGPD Compliance API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/lgpd/consent": {
            "post": {
              "summary": "Record user consent"
            }
          },
          "/api/lgpd/data-export": {
            "get": {
              "summary": "Export user data"
            }
          },
          "/api/lgpd/data-deletion": {
            "post": {
              "summary": "Request data deletion"
            }
          }
        }
      }
    }
  ]
}