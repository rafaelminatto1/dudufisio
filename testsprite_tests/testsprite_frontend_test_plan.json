[
  {
    "id": "TC001",
    "title": "User login with valid credentials",
    "description": "Verify that a user can successfully log in with valid email and password, and is redirected to the correct role-based dashboard.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Enter valid email and password."
      },
      {
        "type": "action",
        "description": "Click the login button."
      },
      {
        "type": "assertion",
        "description": "Verify login is successful."
      },
      {
        "type": "assertion",
        "description": "Verify user is redirected to the dashboard corresponding to their role."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User login with invalid credentials",
    "description": "Verify that login fails when user provides invalid email or password with appropriate error message.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Enter invalid email and/or password."
      },
      {
        "type": "action",
        "description": "Click the login button."
      },
      {
        "type": "assertion",
        "description": "Verify login is denied."
      },
      {
        "type": "assertion",
        "description": "Verify error message 'Invalid credentials' is shown."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Patient registration with valid data and photo upload",
    "description": "Verify new patient can be registered with valid personal data and secure photo upload stored in Supabase.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to patient registration page."
      },
      {
        "type": "action",
        "description": "Enter valid patient information including name, unique CPF, email, phone, and birth date."
      },
      {
        "type": "action",
        "description": "Upload a valid patient photo file."
      },
      {
        "type": "action",
        "description": "Submit the registration form."
      },
      {
        "type": "assertion",
        "description": "Verify patient record is created successfully."
      },
      {
        "type": "assertion",
        "description": "Verify photo is uploaded and stored securely in Supabase."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Patient registration with duplicate CPF",
    "description": "Verify that the system prevents patient registration when CPF already exists.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to patient registration page."
      },
      {
        "type": "action",
        "description": "Enter patient data with a CPF that already exists in the system."
      },
      {
        "type": "action",
        "description": "Attempt to submit the registration form."
      },
      {
        "type": "assertion",
        "description": "Verify the system rejects registration with a duplicate CPF message."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Advanced patient search with multiple filters",
    "description": "Verify user can retrieve patient list filtered by name, CPF, or other search criteria correctly and paginated.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to patient list page."
      },
      {
        "type": "action",
        "description": "Enter search criteria such as partial/full name or CPF."
      },
      {
        "type": "action",
        "description": "Submit search query."
      },
      {
        "type": "assertion",
        "description": "Verify resulting patient list matches search filters."
      },
      {
        "type": "assertion",
        "description": "Verify list supports pagination and loads next pages correctly."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Schedule appointment with available slot",
    "description": "Verify user can successfully schedule a new appointment on an available date and time with correct duration and notes.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to appointment scheduling page."
      },
      {
        "type": "action",
        "description": "Select a patient valid in the system."
      },
      {
        "type": "action",
        "description": "Choose an appointment date and time slot that is free."
      },
      {
        "type": "action",
        "description": "Enter appointment duration and optional notes."
      },
      {
        "type": "action",
        "description": "Submit the appointment request."
      },
      {
        "type": "assertion",
        "description": "Verify appointment is scheduled successfully."
      },
      {
        "type": "assertion",
        "description": "Verify the appointment appears on calendar."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Prevent appointment scheduling conflict",
    "description": "Verify system prevents creating or rescheduling an appointment into a time slot that conflicts with existing appointments.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to appointment scheduling page."
      },
      {
        "type": "action",
        "description": "Attempt to schedule an appointment overlapping with an existing confirmed appointment."
      },
      {
        "type": "action",
        "description": "Submit the appointment request."
      },
      {
        "type": "assertion",
        "description": "Verify system rejects scheduling due to conflict."
      },
      {
        "type": "assertion",
        "description": "Verify user is notified with a conflict error message."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Add pain point in body mapping with valid data",
    "description": "Verify physiotherapist can add pain point markers on interactive body map with region, intensity scale, coordinates, and notes.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Access a patient session in body mapping module."
      },
      {
        "type": "action",
        "description": "Select a body region to add a pain point."
      },
      {
        "type": "action",
        "description": "Input valid pain intensity between 0 and 10."
      },
      {
        "type": "action",
        "description": "Optionally add coordinates and clinical notes."
      },
      {
        "type": "action",
        "description": "Save the pain point."
      },
      {
        "type": "assertion",
        "description": "Verify the pain point is stored and appears on the body map."
      },
      {
        "type": "assertion",
        "description": "Verify the pain point appears in the session's timeline of evolution."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Record clinical session with pain assessments and treatment plan",
    "description": "Verify physiotherapist can create a clinical session documenting session type, pain before and after, duration, and clinical notes.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to new clinical session form for a patient."
      },
      {
        "type": "action",
        "description": "Select session type from allowed options."
      },
      {
        "type": "action",
        "description": "Enter session date and time, duration."
      },
      {
        "type": "action",
        "description": "Enter pain assessment scores before and after session (0-10 scale)."
      },
      {
        "type": "action",
        "description": "Fill clinical notes and attach linked exercises if applicable."
      },
      {
        "type": "action",
        "description": "Submit the session."
      },
      {
        "type": "assertion",
        "description": "Verify the session is saved and visible in patient's session timeline."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Filter and prescribe exercises from library",
    "description": "Verify that physiotherapists can filter exercises by category, difficulty, and body region and prescribe specific exercises to a patient.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open exercises library."
      },
      {
        "type": "action",
        "description": "Apply filters such as category, difficulty level, and body regions."
      },
      {
        "type": "action",
        "description": "Browse filtered exercises and select one."
      },
      {
        "type": "action",
        "description": "Prescribe selected exercise with custom instructions to patient."
      },
      {
        "type": "assertion",
        "description": "Verify exercise is added to patient's prescribed list."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Generate clinical and financial reports with custom templates",
    "description": "Verify authorized users can generate reports using templates with specified date ranges and filters, exported as PDF, Excel, or CSV.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to report generation module."
      },
      {
        "type": "action",
        "description": "Select a report template and specify report name."
      },
      {
        "type": "action",
        "description": "Set date range and optional filters."
      },
      {
        "type": "action",
        "description": "Submit request to generate report."
      },
      {
        "type": "action",
        "description": "Choose export format (PDF, Excel, CSV)."
      },
      {
        "type": "assertion",
        "description": "Verify report is generated with accurate data matching criteria."
      },
      {
        "type": "assertion",
        "description": "Verify exported report downloads correctly in chosen format."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Export patient data compliant with LGPD",
    "description": "Verify patient can request export of their personal data in supported formats and receive correct data package.",
    "category": "compliance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Patient logs into portal and accesses LGPD compliance page."
      },
      {
        "type": "action",
        "description": "Request data export selecting preferred format (json, csv, pdf)."
      },
      {
        "type": "assertion",
        "description": "Verify system processes export request."
      },
      {
        "type": "assertion",
        "description": "Verify exported data contains all personal and clinical data as per LGPD requirements."
      },
      {
        "type": "assertion",
        "description": "Verify patient receives exported file for download."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Request secure deletion of patient data under LGPD",
    "description": "Verify patient can securely request deletion of personal data with reason, and system logs the request for audit.",
    "category": "compliance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Patient accesses LGPD data deletion request page."
      },
      {
        "type": "action",
        "description": "Submit a deletion request with patient ID and reason."
      },
      {
        "type": "assertion",
        "description": "Verify system processes deletion request and confirms submission."
      },
      {
        "type": "assertion",
        "description": "Verify deletion request is logged with timestamp for audit purposes."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Verify role-based access control (RBAC) for restricted areas",
    "description": "Verify that users with different roles (admin, physiotherapist, patient) have permissions only to their allowed features and data.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as administrator and access all modules."
      },
      {
        "type": "assertion",
        "description": "Verify access to patient management, reports, settings, and other admin areas."
      },
      {
        "type": "action",
        "description": "Log in as physiotherapist."
      },
      {
        "type": "assertion",
        "description": "Verify access to patient sessions, body mapping, exercise prescription only."
      },
      {
        "type": "action",
        "description": "Log in as patient."
      },
      {
        "type": "assertion",
        "description": "Verify access only to personal portal features like exercise prescriptions and feedback."
      },
      {
        "type": "action",
        "description": "Attempt to access unauthorized API endpoints or pages."
      },
      {
        "type": "assertion",
        "description": "Verify access is denied with proper error status."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Verify notifications for appointment confirmations and waitlist promotions",
    "description": "Verify that the system sends automatic notifications to patients on appointment confirmations, cancellations, and when promoted from waitlist.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Schedule an appointment and confirm it."
      },
      {
        "type": "assertion",
        "description": "Verify patient receives notification of confirmation."
      },
      {
        "type": "action",
        "description": "Cancel an appointment."
      },
      {
        "type": "assertion",
        "description": "Verify notification of cancellation is sent."
      },
      {
        "type": "action",
        "description": "Add a patient to waitlist for a blocked slot."
      },
      {
        "type": "action",
        "description": "Cancel the conflicting appointment to free the slot."
      },
      {
        "type": "assertion",
        "description": "Verify patient in waitlist automatically gets notification of promotion."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Dashboard analytics data correctness and real-time updates",
    "description": "Verify that dashboard metrics for key performance indicators and patient/therapist statistics are accurate and update in real-time.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as authorized user with dashboard access."
      },
      {
        "type": "assertion",
        "description": "Verify displayed KPIs match data from database."
      },
      {
        "type": "action",
        "description": "Trigger operations affecting dashboard metrics, like new patient or appointment."
      },
      {
        "type": "assertion",
        "description": "Verify dashboard updates to reflect new data without manual refresh."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "File upload security with invalid and valid file types",
    "description": "Verify that upload system accepts only allowed file types and sizes, storing valid uploads securely, and rejecting unsafe or oversized files.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to upload a valid photo file within size limits."
      },
      {
        "type": "assertion",
        "description": "Verify upload completes successfully and file is stored securely."
      },
      {
        "type": "action",
        "description": "Attempt to upload invalid file type (e.g., executable)."
      },
      {
        "type": "assertion",
        "description": "Verify upload is rejected with appropriate error."
      },
      {
        "type": "action",
        "description": "Attempt to upload file exceeding size limit."
      },
      {
        "type": "assertion",
        "description": "Verify upload is rejected due to size restriction."
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Audit trail logs for critical user actions",
    "description": "Verify that actions such as patient data modification, appointment changes, data export, and deletion requests are logged immutably for compliance.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Modify patient data and save changes."
      },
      {
        "type": "action",
        "description": "Create, reschedule, and cancel appointments."
      },
      {
        "type": "action",
        "description": "Request data export and deletion per LGPD."
      },
      {
        "type": "assertion",
        "description": "Verify all actions are logged with user ID, timestamp, and action details."
      },
      {
        "type": "assertion",
        "description": "Verify audit logs are immutable and accessible to admin."
      }
    ]
  }
]
